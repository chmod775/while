{
  "type": "translation_unit",
  "content": "#include <stdio.h>\n#include <stdint.h>\n#include <stdlib.h>\n#include <stdbool.h>\n\n\nbool NO(bool src) { return src; }\nbool NC(bool src) { return !src; }\nbool COIL(bool en, bool * dest) { *dest = en; }\nbool SET(bool* dest) { *dest = true; return true; }\nbool RESET(bool *dest) { *dest = false; return true; }\n\ntypedef struct {\n  bool lastValue;\n} s_RTRIG;\n\nbool RTRIG(bool en, s_RTRIG *inst) {\n  bool ret = (en == true) && (inst->lastValue == false);\n  inst->lastValue = en;\n  return ret;\n}\n\n\ntypedef struct {\n\tbool motor;\n\tint cnt;\n\ts_RTRIG rtrig_start;\n} s_file5;\n\nvoid file5(s_file5 *inst, bool start, bool stop) {\n\n\tbool t0 = true ? NO(start) : false;\n\tbool t1 = true ? NO(inst->motor) : false;\n\tbool t2 = t0 || t1;\n\tbool t3 = t2 ? NC(stop) : false;\n\tbool t4 = COIL(t3, &inst->motor);\n\t\n\tbool t5 = true ? NO(start) : false;\n\tbool t6 = RTRIG(t5, &inst->rtrig_start);\n\tbool t7 = t6 ? ADD_INT(inst->cnt, 1, &inst->cnt) : false;\n\t\n}\n\n\n\nvoid print(bool val) {\n  printf(\"Value: %d\\n\", val);\n}\n\nvoid main() {\n  s_file5 inst;\n  inst.cnt = 0;\n\n\n  file5(&inst, false, false);\n  print(inst.motor);\n\n  file5(&inst, true, false);\n  print(inst.motor);\n\n  file5(&inst, true, false);\n  print(inst.motor);\n\n  file5(&inst, true, false);\n  print(inst.motor);\n\n  file5(&inst, false, false);\n  print(inst.motor);\n\n  file5(&inst, false, true);\n  print(inst.motor);\n\n  file5(&inst, false, false);\n  print(inst.motor);\n\n  file5(&inst, true, false);\n  print(inst.motor);\n\n  printf(\"cnt: %d\\n\", inst.cnt);\n}\n\n\nbool       \nADD_INT(int a,\nint b,\nint *c) {\n  *c = a + b;\n  return true;\n}",
  "childrens": [
    {
      "type": "preproc_include",
      "content": "#include <stdio.h>\n",
      "childrens": [
        {
          "type": "#include",
          "content": "#include",
          "childrens": []
        },
        {
          "type": "system_lib_string",
          "content": "<stdio.h>",
          "childrens": []
        },
        {
          "type": "\n",
          "content": "\n",
          "childrens": []
        }
      ]
    },
    {
      "type": "preproc_include",
      "content": "#include <stdint.h>\n",
      "childrens": [
        {
          "type": "#include",
          "content": "#include",
          "childrens": []
        },
        {
          "type": "system_lib_string",
          "content": "<stdint.h>",
          "childrens": []
        },
        {
          "type": "\n",
          "content": "\n",
          "childrens": []
        }
      ]
    },
    {
      "type": "preproc_include",
      "content": "#include <stdlib.h>\n",
      "childrens": [
        {
          "type": "#include",
          "content": "#include",
          "childrens": []
        },
        {
          "type": "system_lib_string",
          "content": "<stdlib.h>",
          "childrens": []
        },
        {
          "type": "\n",
          "content": "\n",
          "childrens": []
        }
      ]
    },
    {
      "type": "preproc_include",
      "content": "#include <stdbool.h>\n\n\n",
      "childrens": [
        {
          "type": "#include",
          "content": "#include",
          "childrens": []
        },
        {
          "type": "system_lib_string",
          "content": "<stdbool.h>",
          "childrens": []
        },
        {
          "type": "\n",
          "content": "\n\n\n",
          "childrens": []
        }
      ]
    },
    {
      "type": "function_definition",
      "content": "bool NO(bool src) { return src; }",
      "childrens": [
        {
          "type": "primitive_type",
          "content": "bool",
          "childrens": []
        },
        {
          "type": "function_declarator",
          "content": "NO(bool src)",
          "childrens": [
            {
              "type": "identifier",
              "content": "NO",
              "childrens": []
            },
            {
              "type": "parameter_list",
              "content": "(bool src)",
              "childrens": [
                {
                  "type": "(",
                  "content": "(",
                  "childrens": []
                },
                {
                  "type": "parameter_declaration",
                  "content": "bool src",
                  "childrens": [
                    {
                      "type": "primitive_type",
                      "content": "bool",
                      "childrens": []
                    },
                    {
                      "type": "identifier",
                      "content": "src",
                      "childrens": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "content": ")",
                  "childrens": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "content": "{ return src; }",
          "childrens": [
            {
              "type": "{",
              "content": "{",
              "childrens": []
            },
            {
              "type": "return_statement",
              "content": "return src;",
              "childrens": [
                {
                  "type": "return",
                  "content": "return",
                  "childrens": []
                },
                {
                  "type": "identifier",
                  "content": "src",
                  "childrens": []
                },
                {
                  "type": ";",
                  "content": ";",
                  "childrens": []
                }
              ]
            },
            {
              "type": "}",
              "content": "}",
              "childrens": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "content": "bool NC(bool src) { return !src; }",
      "childrens": [
        {
          "type": "primitive_type",
          "content": "bool",
          "childrens": []
        },
        {
          "type": "function_declarator",
          "content": "NC(bool src)",
          "childrens": [
            {
              "type": "identifier",
              "content": "NC",
              "childrens": []
            },
            {
              "type": "parameter_list",
              "content": "(bool src)",
              "childrens": [
                {
                  "type": "(",
                  "content": "(",
                  "childrens": []
                },
                {
                  "type": "parameter_declaration",
                  "content": "bool src",
                  "childrens": [
                    {
                      "type": "primitive_type",
                      "content": "bool",
                      "childrens": []
                    },
                    {
                      "type": "identifier",
                      "content": "src",
                      "childrens": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "content": ")",
                  "childrens": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "content": "{ return !src; }",
          "childrens": [
            {
              "type": "{",
              "content": "{",
              "childrens": []
            },
            {
              "type": "return_statement",
              "content": "return !src;",
              "childrens": [
                {
                  "type": "return",
                  "content": "return",
                  "childrens": []
                },
                {
                  "type": "unary_expression",
                  "content": "!src",
                  "childrens": [
                    {
                      "type": "!",
                      "content": "!",
                      "childrens": []
                    },
                    {
                      "type": "identifier",
                      "content": "src",
                      "childrens": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "content": ";",
                  "childrens": []
                }
              ]
            },
            {
              "type": "}",
              "content": "}",
              "childrens": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "content": "bool COIL(bool en, bool * dest) { *dest = en; }",
      "childrens": [
        {
          "type": "primitive_type",
          "content": "bool",
          "childrens": []
        },
        {
          "type": "function_declarator",
          "content": "COIL(bool en, bool * dest)",
          "childrens": [
            {
              "type": "identifier",
              "content": "COIL",
              "childrens": []
            },
            {
              "type": "parameter_list",
              "content": "(bool en, bool * dest)",
              "childrens": [
                {
                  "type": "(",
                  "content": "(",
                  "childrens": []
                },
                {
                  "type": "parameter_declaration",
                  "content": "bool en",
                  "childrens": [
                    {
                      "type": "primitive_type",
                      "content": "bool",
                      "childrens": []
                    },
                    {
                      "type": "identifier",
                      "content": "en",
                      "childrens": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "content": ",",
                  "childrens": []
                },
                {
                  "type": "parameter_declaration",
                  "content": "bool * dest",
                  "childrens": [
                    {
                      "type": "primitive_type",
                      "content": "bool",
                      "childrens": []
                    },
                    {
                      "type": "pointer_declarator",
                      "content": "* dest",
                      "childrens": [
                        {
                          "type": "*",
                          "content": "*",
                          "childrens": []
                        },
                        {
                          "type": "identifier",
                          "content": "dest",
                          "childrens": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ")",
                  "content": ")",
                  "childrens": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "content": "{ *dest = en; }",
          "childrens": [
            {
              "type": "{",
              "content": "{",
              "childrens": []
            },
            {
              "type": "expression_statement",
              "content": "*dest = en;",
              "childrens": [
                {
                  "type": "assignment_expression",
                  "content": "*dest = en",
                  "childrens": [
                    {
                      "type": "pointer_expression",
                      "content": "*dest",
                      "childrens": [
                        {
                          "type": "*",
                          "content": "*",
                          "childrens": []
                        },
                        {
                          "type": "identifier",
                          "content": "dest",
                          "childrens": []
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "content": "=",
                      "childrens": []
                    },
                    {
                      "type": "identifier",
                      "content": "en",
                      "childrens": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "content": ";",
                  "childrens": []
                }
              ]
            },
            {
              "type": "}",
              "content": "}",
              "childrens": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "content": "bool SET(bool* dest) { *dest = true; return true; }",
      "childrens": [
        {
          "type": "primitive_type",
          "content": "bool",
          "childrens": []
        },
        {
          "type": "function_declarator",
          "content": "SET(bool* dest)",
          "childrens": [
            {
              "type": "identifier",
              "content": "SET",
              "childrens": []
            },
            {
              "type": "parameter_list",
              "content": "(bool* dest)",
              "childrens": [
                {
                  "type": "(",
                  "content": "(",
                  "childrens": []
                },
                {
                  "type": "parameter_declaration",
                  "content": "bool* dest",
                  "childrens": [
                    {
                      "type": "primitive_type",
                      "content": "bool",
                      "childrens": []
                    },
                    {
                      "type": "pointer_declarator",
                      "content": "* dest",
                      "childrens": [
                        {
                          "type": "*",
                          "content": "*",
                          "childrens": []
                        },
                        {
                          "type": "identifier",
                          "content": "dest",
                          "childrens": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ")",
                  "content": ")",
                  "childrens": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "content": "{ *dest = true; return true; }",
          "childrens": [
            {
              "type": "{",
              "content": "{",
              "childrens": []
            },
            {
              "type": "expression_statement",
              "content": "*dest = true;",
              "childrens": [
                {
                  "type": "assignment_expression",
                  "content": "*dest = true",
                  "childrens": [
                    {
                      "type": "pointer_expression",
                      "content": "*dest",
                      "childrens": [
                        {
                          "type": "*",
                          "content": "*",
                          "childrens": []
                        },
                        {
                          "type": "identifier",
                          "content": "dest",
                          "childrens": []
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "content": "=",
                      "childrens": []
                    },
                    {
                      "type": "true",
                      "content": "true",
                      "childrens": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "content": ";",
                  "childrens": []
                }
              ]
            },
            {
              "type": "return_statement",
              "content": "return true;",
              "childrens": [
                {
                  "type": "return",
                  "content": "return",
                  "childrens": []
                },
                {
                  "type": "true",
                  "content": "true",
                  "childrens": []
                },
                {
                  "type": ";",
                  "content": ";",
                  "childrens": []
                }
              ]
            },
            {
              "type": "}",
              "content": "}",
              "childrens": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "content": "bool RESET(bool *dest) { *dest = false; return true; }",
      "childrens": [
        {
          "type": "primitive_type",
          "content": "bool",
          "childrens": []
        },
        {
          "type": "function_declarator",
          "content": "RESET(bool *dest)",
          "childrens": [
            {
              "type": "identifier",
              "content": "RESET",
              "childrens": []
            },
            {
              "type": "parameter_list",
              "content": "(bool *dest)",
              "childrens": [
                {
                  "type": "(",
                  "content": "(",
                  "childrens": []
                },
                {
                  "type": "parameter_declaration",
                  "content": "bool *dest",
                  "childrens": [
                    {
                      "type": "primitive_type",
                      "content": "bool",
                      "childrens": []
                    },
                    {
                      "type": "pointer_declarator",
                      "content": "*dest",
                      "childrens": [
                        {
                          "type": "*",
                          "content": "*",
                          "childrens": []
                        },
                        {
                          "type": "identifier",
                          "content": "dest",
                          "childrens": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ")",
                  "content": ")",
                  "childrens": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "content": "{ *dest = false; return true; }",
          "childrens": [
            {
              "type": "{",
              "content": "{",
              "childrens": []
            },
            {
              "type": "expression_statement",
              "content": "*dest = false;",
              "childrens": [
                {
                  "type": "assignment_expression",
                  "content": "*dest = false",
                  "childrens": [
                    {
                      "type": "pointer_expression",
                      "content": "*dest",
                      "childrens": [
                        {
                          "type": "*",
                          "content": "*",
                          "childrens": []
                        },
                        {
                          "type": "identifier",
                          "content": "dest",
                          "childrens": []
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "content": "=",
                      "childrens": []
                    },
                    {
                      "type": "false",
                      "content": "false",
                      "childrens": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "content": ";",
                  "childrens": []
                }
              ]
            },
            {
              "type": "return_statement",
              "content": "return true;",
              "childrens": [
                {
                  "type": "return",
                  "content": "return",
                  "childrens": []
                },
                {
                  "type": "true",
                  "content": "true",
                  "childrens": []
                },
                {
                  "type": ";",
                  "content": ";",
                  "childrens": []
                }
              ]
            },
            {
              "type": "}",
              "content": "}",
              "childrens": []
            }
          ]
        }
      ]
    },
    {
      "type": "type_definition",
      "content": "typedef struct {\n  bool lastValue;\n} s_RTRIG;",
      "childrens": [
        {
          "type": "typedef",
          "content": "typedef",
          "childrens": []
        },
        {
          "type": "struct_specifier",
          "content": "struct {\n  bool lastValue;\n}",
          "childrens": [
            {
              "type": "struct",
              "content": "struct",
              "childrens": []
            },
            {
              "type": "field_declaration_list",
              "content": "{\n  bool lastValue;\n}",
              "childrens": [
                {
                  "type": "{",
                  "content": "{",
                  "childrens": []
                },
                {
                  "type": "field_declaration",
                  "content": "bool lastValue;",
                  "childrens": [
                    {
                      "type": "primitive_type",
                      "content": "bool",
                      "childrens": []
                    },
                    {
                      "type": "field_identifier",
                      "content": "lastValue",
                      "childrens": []
                    },
                    {
                      "type": ";",
                      "content": ";",
                      "childrens": []
                    }
                  ]
                },
                {
                  "type": "}",
                  "content": "}",
                  "childrens": []
                }
              ]
            }
          ]
        },
        {
          "type": "type_identifier",
          "content": "s_RTRIG",
          "childrens": []
        },
        {
          "type": ";",
          "content": ";",
          "childrens": []
        }
      ]
    },
    {
      "type": "function_definition",
      "content": "bool RTRIG(bool en, s_RTRIG *inst) {\n  bool ret = (en == true) && (inst->lastValue == false);\n  inst->lastValue = en;\n  return ret;\n}",
      "childrens": [
        {
          "type": "primitive_type",
          "content": "bool",
          "childrens": []
        },
        {
          "type": "function_declarator",
          "content": "RTRIG(bool en, s_RTRIG *inst)",
          "childrens": [
            {
              "type": "identifier",
              "content": "RTRIG",
              "childrens": []
            },
            {
              "type": "parameter_list",
              "content": "(bool en, s_RTRIG *inst)",
              "childrens": [
                {
                  "type": "(",
                  "content": "(",
                  "childrens": []
                },
                {
                  "type": "parameter_declaration",
                  "content": "bool en",
                  "childrens": [
                    {
                      "type": "primitive_type",
                      "content": "bool",
                      "childrens": []
                    },
                    {
                      "type": "identifier",
                      "content": "en",
                      "childrens": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "content": ",",
                  "childrens": []
                },
                {
                  "type": "parameter_declaration",
                  "content": "s_RTRIG *inst",
                  "childrens": [
                    {
                      "type": "type_identifier",
                      "content": "s_RTRIG",
                      "childrens": []
                    },
                    {
                      "type": "pointer_declarator",
                      "content": "*inst",
                      "childrens": [
                        {
                          "type": "*",
                          "content": "*",
                          "childrens": []
                        },
                        {
                          "type": "identifier",
                          "content": "inst",
                          "childrens": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ")",
                  "content": ")",
                  "childrens": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "content": "{\n  bool ret = (en == true) && (inst->lastValue == false);\n  inst->lastValue = en;\n  return ret;\n}",
          "childrens": [
            {
              "type": "{",
              "content": "{",
              "childrens": []
            },
            {
              "type": "declaration",
              "content": "bool ret = (en == true) && (inst->lastValue == false);",
              "childrens": [
                {
                  "type": "primitive_type",
                  "content": "bool",
                  "childrens": []
                },
                {
                  "type": "init_declarator",
                  "content": "ret = (en == true) && (inst->lastValue == false)",
                  "childrens": [
                    {
                      "type": "identifier",
                      "content": "ret",
                      "childrens": []
                    },
                    {
                      "type": "=",
                      "content": "=",
                      "childrens": []
                    },
                    {
                      "type": "binary_expression",
                      "content": "(en == true) && (inst->lastValue == false)",
                      "childrens": [
                        {
                          "type": "parenthesized_expression",
                          "content": "(en == true)",
                          "childrens": [
                            {
                              "type": "(",
                              "content": "(",
                              "childrens": []
                            },
                            {
                              "type": "binary_expression",
                              "content": "en == true",
                              "childrens": [
                                {
                                  "type": "identifier",
                                  "content": "en",
                                  "childrens": []
                                },
                                {
                                  "type": "==",
                                  "content": "==",
                                  "childrens": []
                                },
                                {
                                  "type": "true",
                                  "content": "true",
                                  "childrens": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "content": ")",
                              "childrens": []
                            }
                          ]
                        },
                        {
                          "type": "&&",
                          "content": "&&",
                          "childrens": []
                        },
                        {
                          "type": "parenthesized_expression",
                          "content": "(inst->lastValue == false)",
                          "childrens": [
                            {
                              "type": "(",
                              "content": "(",
                              "childrens": []
                            },
                            {
                              "type": "binary_expression",
                              "content": "inst->lastValue == false",
                              "childrens": [
                                {
                                  "type": "field_expression",
                                  "content": "inst->lastValue",
                                  "childrens": [
                                    {
                                      "type": "identifier",
                                      "content": "inst",
                                      "childrens": []
                                    },
                                    {
                                      "type": "->",
                                      "content": "->",
                                      "childrens": []
                                    },
                                    {
                                      "type": "field_identifier",
                                      "content": "lastValue",
                                      "childrens": []
                                    }
                                  ]
                                },
                                {
                                  "type": "==",
                                  "content": "==",
                                  "childrens": []
                                },
                                {
                                  "type": "false",
                                  "content": "false",
                                  "childrens": []
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "content": ")",
                              "childrens": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "content": ";",
                  "childrens": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "content": "inst->lastValue = en;",
              "childrens": [
                {
                  "type": "assignment_expression",
                  "content": "inst->lastValue = en",
                  "childrens": [
                    {
                      "type": "field_expression",
                      "content": "inst->lastValue",
                      "childrens": [
                        {
                          "type": "identifier",
                          "content": "inst",
                          "childrens": []
                        },
                        {
                          "type": "->",
                          "content": "->",
                          "childrens": []
                        },
                        {
                          "type": "field_identifier",
                          "content": "lastValue",
                          "childrens": []
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "content": "=",
                      "childrens": []
                    },
                    {
                      "type": "identifier",
                      "content": "en",
                      "childrens": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "content": ";",
                  "childrens": []
                }
              ]
            },
            {
              "type": "return_statement",
              "content": "return ret;",
              "childrens": [
                {
                  "type": "return",
                  "content": "return",
                  "childrens": []
                },
                {
                  "type": "identifier",
                  "content": "ret",
                  "childrens": []
                },
                {
                  "type": ";",
                  "content": ";",
                  "childrens": []
                }
              ]
            },
            {
              "type": "}",
              "content": "}",
              "childrens": []
            }
          ]
        }
      ]
    },
    {
      "type": "type_definition",
      "content": "typedef struct {\n\tbool motor;\n\tint cnt;\n\ts_RTRIG rtrig_start;\n} s_file5;",
      "childrens": [
        {
          "type": "typedef",
          "content": "typedef",
          "childrens": []
        },
        {
          "type": "struct_specifier",
          "content": "struct {\n\tbool motor;\n\tint cnt;\n\ts_RTRIG rtrig_start;\n}",
          "childrens": [
            {
              "type": "struct",
              "content": "struct",
              "childrens": []
            },
            {
              "type": "field_declaration_list",
              "content": "{\n\tbool motor;\n\tint cnt;\n\ts_RTRIG rtrig_start;\n}",
              "childrens": [
                {
                  "type": "{",
                  "content": "{",
                  "childrens": []
                },
                {
                  "type": "field_declaration",
                  "content": "bool motor;",
                  "childrens": [
                    {
                      "type": "primitive_type",
                      "content": "bool",
                      "childrens": []
                    },
                    {
                      "type": "field_identifier",
                      "content": "motor",
                      "childrens": []
                    },
                    {
                      "type": ";",
                      "content": ";",
                      "childrens": []
                    }
                  ]
                },
                {
                  "type": "field_declaration",
                  "content": "int cnt;",
                  "childrens": [
                    {
                      "type": "primitive_type",
                      "content": "int",
                      "childrens": []
                    },
                    {
                      "type": "field_identifier",
                      "content": "cnt",
                      "childrens": []
                    },
                    {
                      "type": ";",
                      "content": ";",
                      "childrens": []
                    }
                  ]
                },
                {
                  "type": "field_declaration",
                  "content": "s_RTRIG rtrig_start;",
                  "childrens": [
                    {
                      "type": "type_identifier",
                      "content": "s_RTRIG",
                      "childrens": []
                    },
                    {
                      "type": "field_identifier",
                      "content": "rtrig_start",
                      "childrens": []
                    },
                    {
                      "type": ";",
                      "content": ";",
                      "childrens": []
                    }
                  ]
                },
                {
                  "type": "}",
                  "content": "}",
                  "childrens": []
                }
              ]
            }
          ]
        },
        {
          "type": "type_identifier",
          "content": "s_file5",
          "childrens": []
        },
        {
          "type": ";",
          "content": ";",
          "childrens": []
        }
      ]
    },
    {
      "type": "function_definition",
      "content": "void file5(s_file5 *inst, bool start, bool stop) {\n\n\tbool t0 = true ? NO(start) : false;\n\tbool t1 = true ? NO(inst->motor) : false;\n\tbool t2 = t0 || t1;\n\tbool t3 = t2 ? NC(stop) : false;\n\tbool t4 = COIL(t3, &inst->motor);\n\t\n\tbool t5 = true ? NO(start) : false;\n\tbool t6 = RTRIG(t5, &inst->rtrig_start);\n\tbool t7 = t6 ? ADD_INT(inst->cnt, 1, &inst->cnt) : false;\n\t\n}",
      "childrens": [
        {
          "type": "primitive_type",
          "content": "void",
          "childrens": []
        },
        {
          "type": "function_declarator",
          "content": "file5(s_file5 *inst, bool start, bool stop)",
          "childrens": [
            {
              "type": "identifier",
              "content": "file5",
              "childrens": []
            },
            {
              "type": "parameter_list",
              "content": "(s_file5 *inst, bool start, bool stop)",
              "childrens": [
                {
                  "type": "(",
                  "content": "(",
                  "childrens": []
                },
                {
                  "type": "parameter_declaration",
                  "content": "s_file5 *inst",
                  "childrens": [
                    {
                      "type": "type_identifier",
                      "content": "s_file5",
                      "childrens": []
                    },
                    {
                      "type": "pointer_declarator",
                      "content": "*inst",
                      "childrens": [
                        {
                          "type": "*",
                          "content": "*",
                          "childrens": []
                        },
                        {
                          "type": "identifier",
                          "content": "inst",
                          "childrens": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ",",
                  "content": ",",
                  "childrens": []
                },
                {
                  "type": "parameter_declaration",
                  "content": "bool start",
                  "childrens": [
                    {
                      "type": "primitive_type",
                      "content": "bool",
                      "childrens": []
                    },
                    {
                      "type": "identifier",
                      "content": "start",
                      "childrens": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "content": ",",
                  "childrens": []
                },
                {
                  "type": "parameter_declaration",
                  "content": "bool stop",
                  "childrens": [
                    {
                      "type": "primitive_type",
                      "content": "bool",
                      "childrens": []
                    },
                    {
                      "type": "identifier",
                      "content": "stop",
                      "childrens": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "content": ")",
                  "childrens": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "content": "{\n\n\tbool t0 = true ? NO(start) : false;\n\tbool t1 = true ? NO(inst->motor) : false;\n\tbool t2 = t0 || t1;\n\tbool t3 = t2 ? NC(stop) : false;\n\tbool t4 = COIL(t3, &inst->motor);\n\t\n\tbool t5 = true ? NO(start) : false;\n\tbool t6 = RTRIG(t5, &inst->rtrig_start);\n\tbool t7 = t6 ? ADD_INT(inst->cnt, 1, &inst->cnt) : false;\n\t\n}",
          "childrens": [
            {
              "type": "{",
              "content": "{",
              "childrens": []
            },
            {
              "type": "declaration",
              "content": "bool t0 = true ? NO(start) : false;",
              "childrens": [
                {
                  "type": "primitive_type",
                  "content": "bool",
                  "childrens": []
                },
                {
                  "type": "init_declarator",
                  "content": "t0 = true ? NO(start) : false",
                  "childrens": [
                    {
                      "type": "identifier",
                      "content": "t0",
                      "childrens": []
                    },
                    {
                      "type": "=",
                      "content": "=",
                      "childrens": []
                    },
                    {
                      "type": "conditional_expression",
                      "content": "true ? NO(start) : false",
                      "childrens": [
                        {
                          "type": "true",
                          "content": "true",
                          "childrens": []
                        },
                        {
                          "type": "?",
                          "content": "?",
                          "childrens": []
                        },
                        {
                          "type": "call_expression",
                          "content": "NO(start)",
                          "childrens": [
                            {
                              "type": "identifier",
                              "content": "NO",
                              "childrens": []
                            },
                            {
                              "type": "argument_list",
                              "content": "(start)",
                              "childrens": [
                                {
                                  "type": "(",
                                  "content": "(",
                                  "childrens": []
                                },
                                {
                                  "type": "identifier",
                                  "content": "start",
                                  "childrens": []
                                },
                                {
                                  "type": ")",
                                  "content": ")",
                                  "childrens": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "content": ":",
                          "childrens": []
                        },
                        {
                          "type": "false",
                          "content": "false",
                          "childrens": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "content": ";",
                  "childrens": []
                }
              ]
            },
            {
              "type": "declaration",
              "content": "bool t1 = true ? NO(inst->motor) : false;",
              "childrens": [
                {
                  "type": "primitive_type",
                  "content": "bool",
                  "childrens": []
                },
                {
                  "type": "init_declarator",
                  "content": "t1 = true ? NO(inst->motor) : false",
                  "childrens": [
                    {
                      "type": "identifier",
                      "content": "t1",
                      "childrens": []
                    },
                    {
                      "type": "=",
                      "content": "=",
                      "childrens": []
                    },
                    {
                      "type": "conditional_expression",
                      "content": "true ? NO(inst->motor) : false",
                      "childrens": [
                        {
                          "type": "true",
                          "content": "true",
                          "childrens": []
                        },
                        {
                          "type": "?",
                          "content": "?",
                          "childrens": []
                        },
                        {
                          "type": "call_expression",
                          "content": "NO(inst->motor)",
                          "childrens": [
                            {
                              "type": "identifier",
                              "content": "NO",
                              "childrens": []
                            },
                            {
                              "type": "argument_list",
                              "content": "(inst->motor)",
                              "childrens": [
                                {
                                  "type": "(",
                                  "content": "(",
                                  "childrens": []
                                },
                                {
                                  "type": "field_expression",
                                  "content": "inst->motor",
                                  "childrens": [
                                    {
                                      "type": "identifier",
                                      "content": "inst",
                                      "childrens": []
                                    },
                                    {
                                      "type": "->",
                                      "content": "->",
                                      "childrens": []
                                    },
                                    {
                                      "type": "field_identifier",
                                      "content": "motor",
                                      "childrens": []
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "content": ")",
                                  "childrens": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "content": ":",
                          "childrens": []
                        },
                        {
                          "type": "false",
                          "content": "false",
                          "childrens": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "content": ";",
                  "childrens": []
                }
              ]
            },
            {
              "type": "declaration",
              "content": "bool t2 = t0 || t1;",
              "childrens": [
                {
                  "type": "primitive_type",
                  "content": "bool",
                  "childrens": []
                },
                {
                  "type": "init_declarator",
                  "content": "t2 = t0 || t1",
                  "childrens": [
                    {
                      "type": "identifier",
                      "content": "t2",
                      "childrens": []
                    },
                    {
                      "type": "=",
                      "content": "=",
                      "childrens": []
                    },
                    {
                      "type": "binary_expression",
                      "content": "t0 || t1",
                      "childrens": [
                        {
                          "type": "identifier",
                          "content": "t0",
                          "childrens": []
                        },
                        {
                          "type": "||",
                          "content": "||",
                          "childrens": []
                        },
                        {
                          "type": "identifier",
                          "content": "t1",
                          "childrens": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "content": ";",
                  "childrens": []
                }
              ]
            },
            {
              "type": "declaration",
              "content": "bool t3 = t2 ? NC(stop) : false;",
              "childrens": [
                {
                  "type": "primitive_type",
                  "content": "bool",
                  "childrens": []
                },
                {
                  "type": "init_declarator",
                  "content": "t3 = t2 ? NC(stop) : false",
                  "childrens": [
                    {
                      "type": "identifier",
                      "content": "t3",
                      "childrens": []
                    },
                    {
                      "type": "=",
                      "content": "=",
                      "childrens": []
                    },
                    {
                      "type": "conditional_expression",
                      "content": "t2 ? NC(stop) : false",
                      "childrens": [
                        {
                          "type": "identifier",
                          "content": "t2",
                          "childrens": []
                        },
                        {
                          "type": "?",
                          "content": "?",
                          "childrens": []
                        },
                        {
                          "type": "call_expression",
                          "content": "NC(stop)",
                          "childrens": [
                            {
                              "type": "identifier",
                              "content": "NC",
                              "childrens": []
                            },
                            {
                              "type": "argument_list",
                              "content": "(stop)",
                              "childrens": [
                                {
                                  "type": "(",
                                  "content": "(",
                                  "childrens": []
                                },
                                {
                                  "type": "identifier",
                                  "content": "stop",
                                  "childrens": []
                                },
                                {
                                  "type": ")",
                                  "content": ")",
                                  "childrens": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "content": ":",
                          "childrens": []
                        },
                        {
                          "type": "false",
                          "content": "false",
                          "childrens": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "content": ";",
                  "childrens": []
                }
              ]
            },
            {
              "type": "declaration",
              "content": "bool t4 = COIL(t3, &inst->motor);",
              "childrens": [
                {
                  "type": "primitive_type",
                  "content": "bool",
                  "childrens": []
                },
                {
                  "type": "init_declarator",
                  "content": "t4 = COIL(t3, &inst->motor)",
                  "childrens": [
                    {
                      "type": "identifier",
                      "content": "t4",
                      "childrens": []
                    },
                    {
                      "type": "=",
                      "content": "=",
                      "childrens": []
                    },
                    {
                      "type": "call_expression",
                      "content": "COIL(t3, &inst->motor)",
                      "childrens": [
                        {
                          "type": "identifier",
                          "content": "COIL",
                          "childrens": []
                        },
                        {
                          "type": "argument_list",
                          "content": "(t3, &inst->motor)",
                          "childrens": [
                            {
                              "type": "(",
                              "content": "(",
                              "childrens": []
                            },
                            {
                              "type": "identifier",
                              "content": "t3",
                              "childrens": []
                            },
                            {
                              "type": ",",
                              "content": ",",
                              "childrens": []
                            },
                            {
                              "type": "pointer_expression",
                              "content": "&inst->motor",
                              "childrens": [
                                {
                                  "type": "&",
                                  "content": "&",
                                  "childrens": []
                                },
                                {
                                  "type": "field_expression",
                                  "content": "inst->motor",
                                  "childrens": [
                                    {
                                      "type": "identifier",
                                      "content": "inst",
                                      "childrens": []
                                    },
                                    {
                                      "type": "->",
                                      "content": "->",
                                      "childrens": []
                                    },
                                    {
                                      "type": "field_identifier",
                                      "content": "motor",
                                      "childrens": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "content": ")",
                              "childrens": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "content": ";",
                  "childrens": []
                }
              ]
            },
            {
              "type": "declaration",
              "content": "bool t5 = true ? NO(start) : false;",
              "childrens": [
                {
                  "type": "primitive_type",
                  "content": "bool",
                  "childrens": []
                },
                {
                  "type": "init_declarator",
                  "content": "t5 = true ? NO(start) : false",
                  "childrens": [
                    {
                      "type": "identifier",
                      "content": "t5",
                      "childrens": []
                    },
                    {
                      "type": "=",
                      "content": "=",
                      "childrens": []
                    },
                    {
                      "type": "conditional_expression",
                      "content": "true ? NO(start) : false",
                      "childrens": [
                        {
                          "type": "true",
                          "content": "true",
                          "childrens": []
                        },
                        {
                          "type": "?",
                          "content": "?",
                          "childrens": []
                        },
                        {
                          "type": "call_expression",
                          "content": "NO(start)",
                          "childrens": [
                            {
                              "type": "identifier",
                              "content": "NO",
                              "childrens": []
                            },
                            {
                              "type": "argument_list",
                              "content": "(start)",
                              "childrens": [
                                {
                                  "type": "(",
                                  "content": "(",
                                  "childrens": []
                                },
                                {
                                  "type": "identifier",
                                  "content": "start",
                                  "childrens": []
                                },
                                {
                                  "type": ")",
                                  "content": ")",
                                  "childrens": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "content": ":",
                          "childrens": []
                        },
                        {
                          "type": "false",
                          "content": "false",
                          "childrens": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "content": ";",
                  "childrens": []
                }
              ]
            },
            {
              "type": "declaration",
              "content": "bool t6 = RTRIG(t5, &inst->rtrig_start);",
              "childrens": [
                {
                  "type": "primitive_type",
                  "content": "bool",
                  "childrens": []
                },
                {
                  "type": "init_declarator",
                  "content": "t6 = RTRIG(t5, &inst->rtrig_start)",
                  "childrens": [
                    {
                      "type": "identifier",
                      "content": "t6",
                      "childrens": []
                    },
                    {
                      "type": "=",
                      "content": "=",
                      "childrens": []
                    },
                    {
                      "type": "call_expression",
                      "content": "RTRIG(t5, &inst->rtrig_start)",
                      "childrens": [
                        {
                          "type": "identifier",
                          "content": "RTRIG",
                          "childrens": []
                        },
                        {
                          "type": "argument_list",
                          "content": "(t5, &inst->rtrig_start)",
                          "childrens": [
                            {
                              "type": "(",
                              "content": "(",
                              "childrens": []
                            },
                            {
                              "type": "identifier",
                              "content": "t5",
                              "childrens": []
                            },
                            {
                              "type": ",",
                              "content": ",",
                              "childrens": []
                            },
                            {
                              "type": "pointer_expression",
                              "content": "&inst->rtrig_start",
                              "childrens": [
                                {
                                  "type": "&",
                                  "content": "&",
                                  "childrens": []
                                },
                                {
                                  "type": "field_expression",
                                  "content": "inst->rtrig_start",
                                  "childrens": [
                                    {
                                      "type": "identifier",
                                      "content": "inst",
                                      "childrens": []
                                    },
                                    {
                                      "type": "->",
                                      "content": "->",
                                      "childrens": []
                                    },
                                    {
                                      "type": "field_identifier",
                                      "content": "rtrig_start",
                                      "childrens": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": ")",
                              "content": ")",
                              "childrens": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "content": ";",
                  "childrens": []
                }
              ]
            },
            {
              "type": "declaration",
              "content": "bool t7 = t6 ? ADD_INT(inst->cnt, 1, &inst->cnt) : false;",
              "childrens": [
                {
                  "type": "primitive_type",
                  "content": "bool",
                  "childrens": []
                },
                {
                  "type": "init_declarator",
                  "content": "t7 = t6 ? ADD_INT(inst->cnt, 1, &inst->cnt) : false",
                  "childrens": [
                    {
                      "type": "identifier",
                      "content": "t7",
                      "childrens": []
                    },
                    {
                      "type": "=",
                      "content": "=",
                      "childrens": []
                    },
                    {
                      "type": "conditional_expression",
                      "content": "t6 ? ADD_INT(inst->cnt, 1, &inst->cnt) : false",
                      "childrens": [
                        {
                          "type": "identifier",
                          "content": "t6",
                          "childrens": []
                        },
                        {
                          "type": "?",
                          "content": "?",
                          "childrens": []
                        },
                        {
                          "type": "call_expression",
                          "content": "ADD_INT(inst->cnt, 1, &inst->cnt)",
                          "childrens": [
                            {
                              "type": "identifier",
                              "content": "ADD_INT",
                              "childrens": []
                            },
                            {
                              "type": "argument_list",
                              "content": "(inst->cnt, 1, &inst->cnt)",
                              "childrens": [
                                {
                                  "type": "(",
                                  "content": "(",
                                  "childrens": []
                                },
                                {
                                  "type": "field_expression",
                                  "content": "inst->cnt",
                                  "childrens": [
                                    {
                                      "type": "identifier",
                                      "content": "inst",
                                      "childrens": []
                                    },
                                    {
                                      "type": "->",
                                      "content": "->",
                                      "childrens": []
                                    },
                                    {
                                      "type": "field_identifier",
                                      "content": "cnt",
                                      "childrens": []
                                    }
                                  ]
                                },
                                {
                                  "type": ",",
                                  "content": ",",
                                  "childrens": []
                                },
                                {
                                  "type": "number_literal",
                                  "content": "1",
                                  "childrens": []
                                },
                                {
                                  "type": ",",
                                  "content": ",",
                                  "childrens": []
                                },
                                {
                                  "type": "pointer_expression",
                                  "content": "&inst->cnt",
                                  "childrens": [
                                    {
                                      "type": "&",
                                      "content": "&",
                                      "childrens": []
                                    },
                                    {
                                      "type": "field_expression",
                                      "content": "inst->cnt",
                                      "childrens": [
                                        {
                                          "type": "identifier",
                                          "content": "inst",
                                          "childrens": []
                                        },
                                        {
                                          "type": "->",
                                          "content": "->",
                                          "childrens": []
                                        },
                                        {
                                          "type": "field_identifier",
                                          "content": "cnt",
                                          "childrens": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": ")",
                                  "content": ")",
                                  "childrens": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": ":",
                          "content": ":",
                          "childrens": []
                        },
                        {
                          "type": "false",
                          "content": "false",
                          "childrens": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "content": ";",
                  "childrens": []
                }
              ]
            },
            {
              "type": "}",
              "content": "}",
              "childrens": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "content": "void print(bool val) {\n  printf(\"Value: %d\\n\", val);\n}",
      "childrens": [
        {
          "type": "primitive_type",
          "content": "void",
          "childrens": []
        },
        {
          "type": "function_declarator",
          "content": "print(bool val)",
          "childrens": [
            {
              "type": "identifier",
              "content": "print",
              "childrens": []
            },
            {
              "type": "parameter_list",
              "content": "(bool val)",
              "childrens": [
                {
                  "type": "(",
                  "content": "(",
                  "childrens": []
                },
                {
                  "type": "parameter_declaration",
                  "content": "bool val",
                  "childrens": [
                    {
                      "type": "primitive_type",
                      "content": "bool",
                      "childrens": []
                    },
                    {
                      "type": "identifier",
                      "content": "val",
                      "childrens": []
                    }
                  ]
                },
                {
                  "type": ")",
                  "content": ")",
                  "childrens": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "content": "{\n  printf(\"Value: %d\\n\", val);\n}",
          "childrens": [
            {
              "type": "{",
              "content": "{",
              "childrens": []
            },
            {
              "type": "expression_statement",
              "content": "printf(\"Value: %d\\n\", val);",
              "childrens": [
                {
                  "type": "call_expression",
                  "content": "printf(\"Value: %d\\n\", val)",
                  "childrens": [
                    {
                      "type": "identifier",
                      "content": "printf",
                      "childrens": []
                    },
                    {
                      "type": "argument_list",
                      "content": "(\"Value: %d\\n\", val)",
                      "childrens": [
                        {
                          "type": "(",
                          "content": "(",
                          "childrens": []
                        },
                        {
                          "type": "string_literal",
                          "content": "\"Value: %d\\n\"",
                          "childrens": [
                            {
                              "type": "\"",
                              "content": "\"",
                              "childrens": []
                            },
                            {
                              "type": "escape_sequence",
                              "content": "\\n",
                              "childrens": []
                            },
                            {
                              "type": "\"",
                              "content": "\"",
                              "childrens": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "content": ",",
                          "childrens": []
                        },
                        {
                          "type": "identifier",
                          "content": "val",
                          "childrens": []
                        },
                        {
                          "type": ")",
                          "content": ")",
                          "childrens": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "content": ";",
                  "childrens": []
                }
              ]
            },
            {
              "type": "}",
              "content": "}",
              "childrens": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "content": "void main() {\n  s_file5 inst;\n  inst.cnt = 0;\n\n\n  file5(&inst, false, false);\n  print(inst.motor);\n\n  file5(&inst, true, false);\n  print(inst.motor);\n\n  file5(&inst, true, false);\n  print(inst.motor);\n\n  file5(&inst, true, false);\n  print(inst.motor);\n\n  file5(&inst, false, false);\n  print(inst.motor);\n\n  file5(&inst, false, true);\n  print(inst.motor);\n\n  file5(&inst, false, false);\n  print(inst.motor);\n\n  file5(&inst, true, false);\n  print(inst.motor);\n\n  printf(\"cnt: %d\\n\", inst.cnt);\n}",
      "childrens": [
        {
          "type": "primitive_type",
          "content": "void",
          "childrens": []
        },
        {
          "type": "function_declarator",
          "content": "main()",
          "childrens": [
            {
              "type": "identifier",
              "content": "main",
              "childrens": []
            },
            {
              "type": "parameter_list",
              "content": "()",
              "childrens": [
                {
                  "type": "(",
                  "content": "(",
                  "childrens": []
                },
                {
                  "type": ")",
                  "content": ")",
                  "childrens": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "content": "{\n  s_file5 inst;\n  inst.cnt = 0;\n\n\n  file5(&inst, false, false);\n  print(inst.motor);\n\n  file5(&inst, true, false);\n  print(inst.motor);\n\n  file5(&inst, true, false);\n  print(inst.motor);\n\n  file5(&inst, true, false);\n  print(inst.motor);\n\n  file5(&inst, false, false);\n  print(inst.motor);\n\n  file5(&inst, false, true);\n  print(inst.motor);\n\n  file5(&inst, false, false);\n  print(inst.motor);\n\n  file5(&inst, true, false);\n  print(inst.motor);\n\n  printf(\"cnt: %d\\n\", inst.cnt);\n}",
          "childrens": [
            {
              "type": "{",
              "content": "{",
              "childrens": []
            },
            {
              "type": "declaration",
              "content": "s_file5 inst;",
              "childrens": [
                {
                  "type": "type_identifier",
                  "content": "s_file5",
                  "childrens": []
                },
                {
                  "type": "identifier",
                  "content": "inst",
                  "childrens": []
                },
                {
                  "type": ";",
                  "content": ";",
                  "childrens": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "content": "inst.cnt = 0;",
              "childrens": [
                {
                  "type": "assignment_expression",
                  "content": "inst.cnt = 0",
                  "childrens": [
                    {
                      "type": "field_expression",
                      "content": "inst.cnt",
                      "childrens": [
                        {
                          "type": "identifier",
                          "content": "inst",
                          "childrens": []
                        },
                        {
                          "type": ".",
                          "content": ".",
                          "childrens": []
                        },
                        {
                          "type": "field_identifier",
                          "content": "cnt",
                          "childrens": []
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "content": "=",
                      "childrens": []
                    },
                    {
                      "type": "number_literal",
                      "content": "0",
                      "childrens": []
                    }
                  ]
                },
                {
                  "type": ";",
                  "content": ";",
                  "childrens": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "content": "file5(&inst, false, false);",
              "childrens": [
                {
                  "type": "call_expression",
                  "content": "file5(&inst, false, false)",
                  "childrens": [
                    {
                      "type": "identifier",
                      "content": "file5",
                      "childrens": []
                    },
                    {
                      "type": "argument_list",
                      "content": "(&inst, false, false)",
                      "childrens": [
                        {
                          "type": "(",
                          "content": "(",
                          "childrens": []
                        },
                        {
                          "type": "pointer_expression",
                          "content": "&inst",
                          "childrens": [
                            {
                              "type": "&",
                              "content": "&",
                              "childrens": []
                            },
                            {
                              "type": "identifier",
                              "content": "inst",
                              "childrens": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "content": ",",
                          "childrens": []
                        },
                        {
                          "type": "false",
                          "content": "false",
                          "childrens": []
                        },
                        {
                          "type": ",",
                          "content": ",",
                          "childrens": []
                        },
                        {
                          "type": "false",
                          "content": "false",
                          "childrens": []
                        },
                        {
                          "type": ")",
                          "content": ")",
                          "childrens": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "content": ";",
                  "childrens": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "content": "print(inst.motor);",
              "childrens": [
                {
                  "type": "call_expression",
                  "content": "print(inst.motor)",
                  "childrens": [
                    {
                      "type": "identifier",
                      "content": "print",
                      "childrens": []
                    },
                    {
                      "type": "argument_list",
                      "content": "(inst.motor)",
                      "childrens": [
                        {
                          "type": "(",
                          "content": "(",
                          "childrens": []
                        },
                        {
                          "type": "field_expression",
                          "content": "inst.motor",
                          "childrens": [
                            {
                              "type": "identifier",
                              "content": "inst",
                              "childrens": []
                            },
                            {
                              "type": ".",
                              "content": ".",
                              "childrens": []
                            },
                            {
                              "type": "field_identifier",
                              "content": "motor",
                              "childrens": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "content": ")",
                          "childrens": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "content": ";",
                  "childrens": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "content": "file5(&inst, true, false);",
              "childrens": [
                {
                  "type": "call_expression",
                  "content": "file5(&inst, true, false)",
                  "childrens": [
                    {
                      "type": "identifier",
                      "content": "file5",
                      "childrens": []
                    },
                    {
                      "type": "argument_list",
                      "content": "(&inst, true, false)",
                      "childrens": [
                        {
                          "type": "(",
                          "content": "(",
                          "childrens": []
                        },
                        {
                          "type": "pointer_expression",
                          "content": "&inst",
                          "childrens": [
                            {
                              "type": "&",
                              "content": "&",
                              "childrens": []
                            },
                            {
                              "type": "identifier",
                              "content": "inst",
                              "childrens": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "content": ",",
                          "childrens": []
                        },
                        {
                          "type": "true",
                          "content": "true",
                          "childrens": []
                        },
                        {
                          "type": ",",
                          "content": ",",
                          "childrens": []
                        },
                        {
                          "type": "false",
                          "content": "false",
                          "childrens": []
                        },
                        {
                          "type": ")",
                          "content": ")",
                          "childrens": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "content": ";",
                  "childrens": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "content": "print(inst.motor);",
              "childrens": [
                {
                  "type": "call_expression",
                  "content": "print(inst.motor)",
                  "childrens": [
                    {
                      "type": "identifier",
                      "content": "print",
                      "childrens": []
                    },
                    {
                      "type": "argument_list",
                      "content": "(inst.motor)",
                      "childrens": [
                        {
                          "type": "(",
                          "content": "(",
                          "childrens": []
                        },
                        {
                          "type": "field_expression",
                          "content": "inst.motor",
                          "childrens": [
                            {
                              "type": "identifier",
                              "content": "inst",
                              "childrens": []
                            },
                            {
                              "type": ".",
                              "content": ".",
                              "childrens": []
                            },
                            {
                              "type": "field_identifier",
                              "content": "motor",
                              "childrens": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "content": ")",
                          "childrens": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "content": ";",
                  "childrens": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "content": "file5(&inst, true, false);",
              "childrens": [
                {
                  "type": "call_expression",
                  "content": "file5(&inst, true, false)",
                  "childrens": [
                    {
                      "type": "identifier",
                      "content": "file5",
                      "childrens": []
                    },
                    {
                      "type": "argument_list",
                      "content": "(&inst, true, false)",
                      "childrens": [
                        {
                          "type": "(",
                          "content": "(",
                          "childrens": []
                        },
                        {
                          "type": "pointer_expression",
                          "content": "&inst",
                          "childrens": [
                            {
                              "type": "&",
                              "content": "&",
                              "childrens": []
                            },
                            {
                              "type": "identifier",
                              "content": "inst",
                              "childrens": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "content": ",",
                          "childrens": []
                        },
                        {
                          "type": "true",
                          "content": "true",
                          "childrens": []
                        },
                        {
                          "type": ",",
                          "content": ",",
                          "childrens": []
                        },
                        {
                          "type": "false",
                          "content": "false",
                          "childrens": []
                        },
                        {
                          "type": ")",
                          "content": ")",
                          "childrens": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "content": ";",
                  "childrens": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "content": "print(inst.motor);",
              "childrens": [
                {
                  "type": "call_expression",
                  "content": "print(inst.motor)",
                  "childrens": [
                    {
                      "type": "identifier",
                      "content": "print",
                      "childrens": []
                    },
                    {
                      "type": "argument_list",
                      "content": "(inst.motor)",
                      "childrens": [
                        {
                          "type": "(",
                          "content": "(",
                          "childrens": []
                        },
                        {
                          "type": "field_expression",
                          "content": "inst.motor",
                          "childrens": [
                            {
                              "type": "identifier",
                              "content": "inst",
                              "childrens": []
                            },
                            {
                              "type": ".",
                              "content": ".",
                              "childrens": []
                            },
                            {
                              "type": "field_identifier",
                              "content": "motor",
                              "childrens": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "content": ")",
                          "childrens": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "content": ";",
                  "childrens": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "content": "file5(&inst, true, false);",
              "childrens": [
                {
                  "type": "call_expression",
                  "content": "file5(&inst, true, false)",
                  "childrens": [
                    {
                      "type": "identifier",
                      "content": "file5",
                      "childrens": []
                    },
                    {
                      "type": "argument_list",
                      "content": "(&inst, true, false)",
                      "childrens": [
                        {
                          "type": "(",
                          "content": "(",
                          "childrens": []
                        },
                        {
                          "type": "pointer_expression",
                          "content": "&inst",
                          "childrens": [
                            {
                              "type": "&",
                              "content": "&",
                              "childrens": []
                            },
                            {
                              "type": "identifier",
                              "content": "inst",
                              "childrens": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "content": ",",
                          "childrens": []
                        },
                        {
                          "type": "true",
                          "content": "true",
                          "childrens": []
                        },
                        {
                          "type": ",",
                          "content": ",",
                          "childrens": []
                        },
                        {
                          "type": "false",
                          "content": "false",
                          "childrens": []
                        },
                        {
                          "type": ")",
                          "content": ")",
                          "childrens": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "content": ";",
                  "childrens": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "content": "print(inst.motor);",
              "childrens": [
                {
                  "type": "call_expression",
                  "content": "print(inst.motor)",
                  "childrens": [
                    {
                      "type": "identifier",
                      "content": "print",
                      "childrens": []
                    },
                    {
                      "type": "argument_list",
                      "content": "(inst.motor)",
                      "childrens": [
                        {
                          "type": "(",
                          "content": "(",
                          "childrens": []
                        },
                        {
                          "type": "field_expression",
                          "content": "inst.motor",
                          "childrens": [
                            {
                              "type": "identifier",
                              "content": "inst",
                              "childrens": []
                            },
                            {
                              "type": ".",
                              "content": ".",
                              "childrens": []
                            },
                            {
                              "type": "field_identifier",
                              "content": "motor",
                              "childrens": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "content": ")",
                          "childrens": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "content": ";",
                  "childrens": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "content": "file5(&inst, false, false);",
              "childrens": [
                {
                  "type": "call_expression",
                  "content": "file5(&inst, false, false)",
                  "childrens": [
                    {
                      "type": "identifier",
                      "content": "file5",
                      "childrens": []
                    },
                    {
                      "type": "argument_list",
                      "content": "(&inst, false, false)",
                      "childrens": [
                        {
                          "type": "(",
                          "content": "(",
                          "childrens": []
                        },
                        {
                          "type": "pointer_expression",
                          "content": "&inst",
                          "childrens": [
                            {
                              "type": "&",
                              "content": "&",
                              "childrens": []
                            },
                            {
                              "type": "identifier",
                              "content": "inst",
                              "childrens": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "content": ",",
                          "childrens": []
                        },
                        {
                          "type": "false",
                          "content": "false",
                          "childrens": []
                        },
                        {
                          "type": ",",
                          "content": ",",
                          "childrens": []
                        },
                        {
                          "type": "false",
                          "content": "false",
                          "childrens": []
                        },
                        {
                          "type": ")",
                          "content": ")",
                          "childrens": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "content": ";",
                  "childrens": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "content": "print(inst.motor);",
              "childrens": [
                {
                  "type": "call_expression",
                  "content": "print(inst.motor)",
                  "childrens": [
                    {
                      "type": "identifier",
                      "content": "print",
                      "childrens": []
                    },
                    {
                      "type": "argument_list",
                      "content": "(inst.motor)",
                      "childrens": [
                        {
                          "type": "(",
                          "content": "(",
                          "childrens": []
                        },
                        {
                          "type": "field_expression",
                          "content": "inst.motor",
                          "childrens": [
                            {
                              "type": "identifier",
                              "content": "inst",
                              "childrens": []
                            },
                            {
                              "type": ".",
                              "content": ".",
                              "childrens": []
                            },
                            {
                              "type": "field_identifier",
                              "content": "motor",
                              "childrens": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "content": ")",
                          "childrens": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "content": ";",
                  "childrens": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "content": "file5(&inst, false, true);",
              "childrens": [
                {
                  "type": "call_expression",
                  "content": "file5(&inst, false, true)",
                  "childrens": [
                    {
                      "type": "identifier",
                      "content": "file5",
                      "childrens": []
                    },
                    {
                      "type": "argument_list",
                      "content": "(&inst, false, true)",
                      "childrens": [
                        {
                          "type": "(",
                          "content": "(",
                          "childrens": []
                        },
                        {
                          "type": "pointer_expression",
                          "content": "&inst",
                          "childrens": [
                            {
                              "type": "&",
                              "content": "&",
                              "childrens": []
                            },
                            {
                              "type": "identifier",
                              "content": "inst",
                              "childrens": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "content": ",",
                          "childrens": []
                        },
                        {
                          "type": "false",
                          "content": "false",
                          "childrens": []
                        },
                        {
                          "type": ",",
                          "content": ",",
                          "childrens": []
                        },
                        {
                          "type": "true",
                          "content": "true",
                          "childrens": []
                        },
                        {
                          "type": ")",
                          "content": ")",
                          "childrens": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "content": ";",
                  "childrens": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "content": "print(inst.motor);",
              "childrens": [
                {
                  "type": "call_expression",
                  "content": "print(inst.motor)",
                  "childrens": [
                    {
                      "type": "identifier",
                      "content": "print",
                      "childrens": []
                    },
                    {
                      "type": "argument_list",
                      "content": "(inst.motor)",
                      "childrens": [
                        {
                          "type": "(",
                          "content": "(",
                          "childrens": []
                        },
                        {
                          "type": "field_expression",
                          "content": "inst.motor",
                          "childrens": [
                            {
                              "type": "identifier",
                              "content": "inst",
                              "childrens": []
                            },
                            {
                              "type": ".",
                              "content": ".",
                              "childrens": []
                            },
                            {
                              "type": "field_identifier",
                              "content": "motor",
                              "childrens": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "content": ")",
                          "childrens": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "content": ";",
                  "childrens": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "content": "file5(&inst, false, false);",
              "childrens": [
                {
                  "type": "call_expression",
                  "content": "file5(&inst, false, false)",
                  "childrens": [
                    {
                      "type": "identifier",
                      "content": "file5",
                      "childrens": []
                    },
                    {
                      "type": "argument_list",
                      "content": "(&inst, false, false)",
                      "childrens": [
                        {
                          "type": "(",
                          "content": "(",
                          "childrens": []
                        },
                        {
                          "type": "pointer_expression",
                          "content": "&inst",
                          "childrens": [
                            {
                              "type": "&",
                              "content": "&",
                              "childrens": []
                            },
                            {
                              "type": "identifier",
                              "content": "inst",
                              "childrens": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "content": ",",
                          "childrens": []
                        },
                        {
                          "type": "false",
                          "content": "false",
                          "childrens": []
                        },
                        {
                          "type": ",",
                          "content": ",",
                          "childrens": []
                        },
                        {
                          "type": "false",
                          "content": "false",
                          "childrens": []
                        },
                        {
                          "type": ")",
                          "content": ")",
                          "childrens": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "content": ";",
                  "childrens": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "content": "print(inst.motor);",
              "childrens": [
                {
                  "type": "call_expression",
                  "content": "print(inst.motor)",
                  "childrens": [
                    {
                      "type": "identifier",
                      "content": "print",
                      "childrens": []
                    },
                    {
                      "type": "argument_list",
                      "content": "(inst.motor)",
                      "childrens": [
                        {
                          "type": "(",
                          "content": "(",
                          "childrens": []
                        },
                        {
                          "type": "field_expression",
                          "content": "inst.motor",
                          "childrens": [
                            {
                              "type": "identifier",
                              "content": "inst",
                              "childrens": []
                            },
                            {
                              "type": ".",
                              "content": ".",
                              "childrens": []
                            },
                            {
                              "type": "field_identifier",
                              "content": "motor",
                              "childrens": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "content": ")",
                          "childrens": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "content": ";",
                  "childrens": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "content": "file5(&inst, true, false);",
              "childrens": [
                {
                  "type": "call_expression",
                  "content": "file5(&inst, true, false)",
                  "childrens": [
                    {
                      "type": "identifier",
                      "content": "file5",
                      "childrens": []
                    },
                    {
                      "type": "argument_list",
                      "content": "(&inst, true, false)",
                      "childrens": [
                        {
                          "type": "(",
                          "content": "(",
                          "childrens": []
                        },
                        {
                          "type": "pointer_expression",
                          "content": "&inst",
                          "childrens": [
                            {
                              "type": "&",
                              "content": "&",
                              "childrens": []
                            },
                            {
                              "type": "identifier",
                              "content": "inst",
                              "childrens": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "content": ",",
                          "childrens": []
                        },
                        {
                          "type": "true",
                          "content": "true",
                          "childrens": []
                        },
                        {
                          "type": ",",
                          "content": ",",
                          "childrens": []
                        },
                        {
                          "type": "false",
                          "content": "false",
                          "childrens": []
                        },
                        {
                          "type": ")",
                          "content": ")",
                          "childrens": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "content": ";",
                  "childrens": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "content": "print(inst.motor);",
              "childrens": [
                {
                  "type": "call_expression",
                  "content": "print(inst.motor)",
                  "childrens": [
                    {
                      "type": "identifier",
                      "content": "print",
                      "childrens": []
                    },
                    {
                      "type": "argument_list",
                      "content": "(inst.motor)",
                      "childrens": [
                        {
                          "type": "(",
                          "content": "(",
                          "childrens": []
                        },
                        {
                          "type": "field_expression",
                          "content": "inst.motor",
                          "childrens": [
                            {
                              "type": "identifier",
                              "content": "inst",
                              "childrens": []
                            },
                            {
                              "type": ".",
                              "content": ".",
                              "childrens": []
                            },
                            {
                              "type": "field_identifier",
                              "content": "motor",
                              "childrens": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "content": ")",
                          "childrens": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "content": ";",
                  "childrens": []
                }
              ]
            },
            {
              "type": "expression_statement",
              "content": "printf(\"cnt: %d\\n\", inst.cnt);",
              "childrens": [
                {
                  "type": "call_expression",
                  "content": "printf(\"cnt: %d\\n\", inst.cnt)",
                  "childrens": [
                    {
                      "type": "identifier",
                      "content": "printf",
                      "childrens": []
                    },
                    {
                      "type": "argument_list",
                      "content": "(\"cnt: %d\\n\", inst.cnt)",
                      "childrens": [
                        {
                          "type": "(",
                          "content": "(",
                          "childrens": []
                        },
                        {
                          "type": "string_literal",
                          "content": "\"cnt: %d\\n\"",
                          "childrens": [
                            {
                              "type": "\"",
                              "content": "\"",
                              "childrens": []
                            },
                            {
                              "type": "escape_sequence",
                              "content": "\\n",
                              "childrens": []
                            },
                            {
                              "type": "\"",
                              "content": "\"",
                              "childrens": []
                            }
                          ]
                        },
                        {
                          "type": ",",
                          "content": ",",
                          "childrens": []
                        },
                        {
                          "type": "field_expression",
                          "content": "inst.cnt",
                          "childrens": [
                            {
                              "type": "identifier",
                              "content": "inst",
                              "childrens": []
                            },
                            {
                              "type": ".",
                              "content": ".",
                              "childrens": []
                            },
                            {
                              "type": "field_identifier",
                              "content": "cnt",
                              "childrens": []
                            }
                          ]
                        },
                        {
                          "type": ")",
                          "content": ")",
                          "childrens": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "content": ";",
                  "childrens": []
                }
              ]
            },
            {
              "type": "}",
              "content": "}",
              "childrens": []
            }
          ]
        }
      ]
    },
    {
      "type": "function_definition",
      "content": "bool       \nADD_INT(int a,\nint b,\nint *c) {\n  *c = a + b;\n  return true;\n}",
      "childrens": [
        {
          "type": "primitive_type",
          "content": "bool",
          "childrens": []
        },
        {
          "type": "function_declarator",
          "content": "ADD_INT(int a,\nint b,\nint *c)",
          "childrens": [
            {
              "type": "identifier",
              "content": "ADD_INT",
              "childrens": []
            },
            {
              "type": "parameter_list",
              "content": "(int a,\nint b,\nint *c)",
              "childrens": [
                {
                  "type": "(",
                  "content": "(",
                  "childrens": []
                },
                {
                  "type": "parameter_declaration",
                  "content": "int a",
                  "childrens": [
                    {
                      "type": "primitive_type",
                      "content": "int",
                      "childrens": []
                    },
                    {
                      "type": "identifier",
                      "content": "a",
                      "childrens": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "content": ",",
                  "childrens": []
                },
                {
                  "type": "parameter_declaration",
                  "content": "int b",
                  "childrens": [
                    {
                      "type": "primitive_type",
                      "content": "int",
                      "childrens": []
                    },
                    {
                      "type": "identifier",
                      "content": "b",
                      "childrens": []
                    }
                  ]
                },
                {
                  "type": ",",
                  "content": ",",
                  "childrens": []
                },
                {
                  "type": "parameter_declaration",
                  "content": "int *c",
                  "childrens": [
                    {
                      "type": "primitive_type",
                      "content": "int",
                      "childrens": []
                    },
                    {
                      "type": "pointer_declarator",
                      "content": "*c",
                      "childrens": [
                        {
                          "type": "*",
                          "content": "*",
                          "childrens": []
                        },
                        {
                          "type": "identifier",
                          "content": "c",
                          "childrens": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ")",
                  "content": ")",
                  "childrens": []
                }
              ]
            }
          ]
        },
        {
          "type": "compound_statement",
          "content": "{\n  *c = a + b;\n  return true;\n}",
          "childrens": [
            {
              "type": "{",
              "content": "{",
              "childrens": []
            },
            {
              "type": "expression_statement",
              "content": "*c = a + b;",
              "childrens": [
                {
                  "type": "assignment_expression",
                  "content": "*c = a + b",
                  "childrens": [
                    {
                      "type": "pointer_expression",
                      "content": "*c",
                      "childrens": [
                        {
                          "type": "*",
                          "content": "*",
                          "childrens": []
                        },
                        {
                          "type": "identifier",
                          "content": "c",
                          "childrens": []
                        }
                      ]
                    },
                    {
                      "type": "=",
                      "content": "=",
                      "childrens": []
                    },
                    {
                      "type": "binary_expression",
                      "content": "a + b",
                      "childrens": [
                        {
                          "type": "identifier",
                          "content": "a",
                          "childrens": []
                        },
                        {
                          "type": "+",
                          "content": "+",
                          "childrens": []
                        },
                        {
                          "type": "identifier",
                          "content": "b",
                          "childrens": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": ";",
                  "content": ";",
                  "childrens": []
                }
              ]
            },
            {
              "type": "return_statement",
              "content": "return true;",
              "childrens": [
                {
                  "type": "return",
                  "content": "return",
                  "childrens": []
                },
                {
                  "type": "true",
                  "content": "true",
                  "childrens": []
                },
                {
                  "type": ";",
                  "content": ";",
                  "childrens": []
                }
              ]
            },
            {
              "type": "}",
              "content": "}",
              "childrens": []
            }
          ]
        }
      ]
    }
  ]
}